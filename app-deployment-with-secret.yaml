# app-deployment-with-secret.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-app-backend # Name of the application backend deployment
  namespace: my-app-dev
  labels:
    app: my-app-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-app-backend
  template:
    metadata:
      labels:
        app: my-app-backend
    spec:
      containers:
      - name: backend-container
        image: your-backend-app-image:latest # Replace with your actual backend application image
        ports:
        - containerPort: 8080
        env: # Injecting secret values as environment variables
        - name: DB_USERNAME # Environment variable name in the container
          valueFrom: # Source the value from a SecretKeySelector
            secretKeyRef:
              name: my-database-credentials # Name of the Secret
              key: username # Key within the Secret to use
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: my-database-credentials
              key: password
        volumeMounts: # Optionally mount secrets as files (often preferred for passwords)
        - name: db-credentials-volume # Name of the volume mount
          mountPath: "/etc/db-credentials" # Path inside the container where secret files will be mounted
          readOnly: true # Secrets should generally be mounted read-only
      volumes: # Define the volume that sources from the Secret
      - name: db-credentials-volume
        secret:
          secretName: my-database-credentials # The name of the Secret to mount
          # By default, each key in the secret becomes a file in the mountPath
          # For example, /etc/db-credentials/username and /etc/db-credentials/password